{"version":3,"sources":["App.js","index.js"],"names":["itemsFromBackend","id","uuidv4","content","columnsFromBackend","name","items","App","useState","columns","setColumns","style","display","justifyContent","height","onDragEnd","res","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","column","copiedItems","Object","entries","map","key","flexDirection","alignContent","marginLeft","margin","provided","snapshot","droppableProps","ref","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableId","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAIMA,EAAmB,CACvB,CAAEC,GAAIC,cAAUC,QAAS,cACzB,CAAEF,GAAIC,cAAUC,QAAS,eACzB,CAAEF,GAAIC,cAAUC,QAAS,cACzB,CAAEF,GAAIC,cAAUC,QAAS,gBAGrBC,GAAkB,mBACrBF,cAAW,CACVG,KAAM,OACNC,MAAON,IAHa,cAKrBE,cAAW,CACVG,KAAM,cACNC,MAAO,KAPa,cASrBJ,cAAW,CACVG,KAAM,OACNC,MAAO,KAXa,GAmHTC,MAvEf,WAAgB,IAAD,IACiBC,mBAASJ,GAD1B,mBACNK,EADM,KACGC,EADH,KAGb,OACE,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,OAAQ,SAC/D,kBAAC,IAAD,CAAiBC,UAAW,SAACC,GAAD,OAlChB,SAACA,EAAKP,EAASC,GAC/B,GAAKM,EAAIC,YAAT,CAD8C,IAGtCC,EAAwBF,EAAxBE,OAAQD,EAAgBD,EAAhBC,YAEhB,GAAIC,EAAOC,cAAgBF,EAAYE,YAAa,CAAC,IAAD,EAC5CC,EAAeX,EAAQS,EAAOC,aAC9BE,EAAaZ,EAAQQ,EAAYE,aACjCG,EAAW,YAAOF,EAAad,OAC/BiB,EAAS,YAAOF,EAAWf,OAJiB,EAKhCgB,EAAYE,OAAON,EAAOO,MAAO,GAA5CC,EAL2C,oBAMlDH,EAAUC,OAAOP,EAAYQ,MAAO,EAAGC,GACvChB,EAAW,eACND,GADK,mBAEPS,EAAOC,YAFA,eAEmBC,EAFnB,CAEiCd,MAAOgB,KAFxC,cAGPL,EAAYE,YAHL,eAGwBE,EAHxB,CAGoCf,MAAOiB,KAH3C,SAKL,CACL,IAAMI,EAASlB,EAAQS,EAAOC,aACxBS,EAAW,YAAOD,EAAOrB,OAF1B,EAGasB,EAAYJ,OAAON,EAAOO,MAAO,GAA5CC,EAHF,oBAILE,EAAYJ,OAAOP,EAAYQ,MAAO,EAAGC,GACzChB,EAAW,eACND,EADK,eAEPS,EAAOC,YAFA,eAEmBQ,EAFnB,CAE2BrB,MAAOsB,SAULb,CAAUC,EAAKP,EAASC,KAA7D,UACGmB,OAAOC,QAAQrB,UADlB,aACG,EAAyBsB,KAAI,mCAAE9B,EAAF,KAAM0B,EAAN,YAC5B,yBACEK,IAAK/B,EACLU,MAAO,CACLC,QAAS,OACTqB,cAAe,SACfC,aAAc,WAGhB,wBAAIvB,MAAO,CAAEwB,WAAY,IAAMR,EAAOtB,MACtC,yBAAKM,MAAO,CAAEyB,OAAQ,IACpB,kBAAC,IAAD,CAAWjB,YAAalB,IACrB,SAACoC,EAAUC,GAAX,OACC,yCACMD,EAASE,eADf,CAEEC,IAAKH,EAASI,SACd9B,MAAO,CACL+B,WAAYJ,EAASK,eACjB,YACA,YACJC,QAAS,EACTC,MAAO,IACPC,UAAW,OAGZnB,EAAOrB,MAAMyB,KAAI,SAACgB,EAAMtB,GAAP,OAChB,kBAAC,IAAD,CACEO,IAAKe,EAAK9C,GACV+C,YAAaD,EAAK9C,GAClBwB,MAAOA,IAEN,SAACY,EAAUC,GAAX,OACC,uCACEE,IAAKH,EAASI,UACVJ,EAASY,eACTZ,EAASa,gBAHf,CAIEvC,MAAK,aACHwC,WAAY,OACZP,QAAS,GACTR,OAAQ,YACRU,UAAW,OACXM,gBAAiBd,EAASe,WACtB,UACA,UACJC,MAAO,SACJjB,EAASY,eAAetC,SAG5BoC,EAAK5C,eAKbkC,EAASkB,wBC9G9BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7fd32157.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst itemsFromBackend = [\n  { id: uuidv4(), content: 'First task' },\n  { id: uuidv4(), content: 'Second task' },\n  { id: uuidv4(), content: 'Third task' },\n  { id: uuidv4(), content: 'Fourth task' },\n];\n\nconst columnsFromBackend = {\n  [uuidv4()]: {\n    name: 'Todo',\n    items: itemsFromBackend,\n  },\n  [uuidv4()]: {\n    name: 'In progress',\n    items: [],\n  },\n  [uuidv4()]: {\n    name: 'Done',\n    items: [],\n  },\n};\n\nconst onDragEnd = (res, columns, setColumns) => {\n  if (!res.destination) return;\n\n  const { source, destination } = res;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: { ...sourceColumn, items: sourceItems },\n      [destination.droppableId]: { ...destColumn, items: destItems },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: { ...column, items: copiedItems },\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', height: '100%' }}>\n      <DragDropContext onDragEnd={(res) => onDragEnd(res, columns, setColumns)}>\n        {Object.entries(columns)?.map(([id, column]) => (\n          <div\n            key={id}\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignContent: 'center',\n            }}\n          >\n            <h2 style={{ marginLeft: 8 }}>{column.name}</h2>\n            <div style={{ margin: 8 }}>\n              <Droppable droppableId={id}>\n                {(provided, snapshot) => (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={{\n                      background: snapshot.isDraggingOver\n                        ? 'lightblue'\n                        : 'lightgrey',\n                      padding: 4,\n                      width: 250,\n                      minHeight: 500,\n                    }}\n                  >\n                    {column.items.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={{\n                              userSelect: 'none',\n                              padding: 16,\n                              margin: '0 0 8px 0',\n                              minHeight: '50px',\n                              backgroundColor: snapshot.isDragging\n                                ? '#263B4A'\n                                : '#456C86',\n                              color: 'white',\n                              ...provided.draggableProps.style,\n                            }}\n                          >\n                            {item.content}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n          </div>\n        ))}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}